---
execute: 
  eval: true
---

## Effective Delivery of Insights {.title-slide-light}

![](https://github.com/rstudio/hex-stickers/blob/main/PNG/shiny.png?raw=true){.absolute top="200" left="50" width="260"} ![](https://pkgs.rstudio.com/connectapi/reference/figures/logo.svg){.absolute top="200" left="310" width="260"}

## Review

![](slide_resources/ds-workflows-r-2024.jpg){fig-align="center"}

## Section Agenda {.brackets-light}

<br>

-   Using Shiny to deliver interactive content
-   Principles of Shiny in production
-   Monitoring production content

## Let's talk Shiny

![](https://raw.githubusercontent.com/rstudio/hex-stickers/580e9bada770756d25dbd3696159744d1e9c9251/SVG/shiny.svg){.absolute style="padding-right: 15px;" left="600" top="10" width="200"} <br><br>

::::::: columns
:::: {.column width="50%"}
::: fragment
Whether you're here <br> in your Shiny journey:

![](slide_resources/andriyko-podilnyk-RCfi7vgJjUY-unsplash.jpg) <br>[Photo by <a href="https://unsplash.com/@andriyko?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Andriyko Podilnyk</a> on <a href="https://unsplash.com/photos/orange-tabby-kitten-in-grasses-RCfi7vgJjUY?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>]{.smallest}
:::
::::

:::: {.column width="50%"}
::: fragment
<br> Or here:

![](slide_resources/francesco-ZxNKxnR32Ng-unsplash.jpg)

[Photo by <a href="https://unsplash.com/@detpho?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Francesco</a> on <a href="https://unsplash.com/photos/ZxNKxnR32Ng?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>]{.smallest}
:::
::::
:::::::

## ðŸ§° Shiny resources

-   Get started with Shiny (R or Python!) <https://shiny.posit.co/getstarted>
-   Gallery of examples <https://shiny.posit.co/r/gallery/>
-   **The authoritative reference, Mastering Shiny** <https://mastering-shiny.org>
-   Helper packages
    -   [`bslib`](https://rstudio.github.io/bslib/) - add themes, components, and layouts with ease
    -   [`thematic`](https://rstudio.github.io/thematic/) - extends your Shiny theme to plots\
    -   [`shinyuieditor`](https://rstudio.github.io/shinyuieditor/index.html#trouble-installing/) - a visual tool to help create the UI portion of your Shiny app

## Shiny in production

<br> "But my app runs great on my laptop..." <br><br>

::: fragment
Two sides to this coin:

1.  Optimize your app
2.  Tune your runtime settings
:::

## Shiny in production --- Optimize your app

<br>

ðŸ“£ Design principle: Make your app a lightweight presentation layer <br><br>

:::::::: columns
::::::: fragment
:::: {.column width="45%"}
{{< bi sign-turn-right-fill color=orange >}} Performance workflow:

::: smaller
-   Add logging to app, either basic `message` statements or use [`log4r`](https://github.com/johnmyleswhite/log4r) package
-   use [`shinyloadtest`](https://rstudio.github.io/shinyloadtest/) to simulate app performance under load
-   use [`profvis`](https://rstudio.github.io/profvis/) to profile your app to identify bottlenecks
-   Optimize app (in order of value-add):
    -   Move work upstream out of Shiny
    -   Make code faster
    -   Use caching
    -   Use async
:::
::::

:::: {.column width="50%"}
::: {style="background: #F6F6F6; width: 600px; height: 400px; margin: 20px; padding: 20px; box-shadow: 0 18px 18px -9px lightgray; margin-left: auto; margin-right: auto;"}
ðŸ§° References:

-   Joe Cheng's [Shiny in Production](https://youtu.be/Wy3TY0gOmJw) talk at 2019 rstudio::conf
-   [Mastering Shiny, Performance](https://mastering-shiny.org/performance.html) chapter
:::
::::
:::::::
::::::::

## What does our Ferry Delay App need to do?

::: fragment
-   Make requests to our API
:::

::: fragment
-   Receive and display API response
:::

:::: fragment
::: {.callout-note icon="false"}
## Activity

ðŸ‘‰ Activity objective: explore the simply shiny app.

-   Open the project `materials/05-shiny-app/05-shiny-app.Rproj`
-   Open the file `simple_ferry_app/app.R`
-   Click `Run App` and explore the shiny app.

Get a taste for how shiny can be used to create **reactive** API queries!
:::
::::

## Putting the Pieces Together

Our Shiny application does a bit more:

::: incremental
1.  Read in the validated ferry-weather data from database.
2.  Extract ferry station information from `ferryfairy` package.
3.  Take in user inputs.
4.  Make API queries.
5.  Display API response.
6.  Display a map.
7.  Show average delay times.
:::

## Putting the Pieces Together

Our Shiny application does a bit more:

1.  Read in the validated ferry-weather data from database.
2.  Extract ferry station information from `ferryfairy` package.
3.  Take in user inputs.
4.  **Make API queries.**
5.  Display API response.
6.  Display a map.
7.  Show average delay times.

::: fragment
ðŸ“£ This Shiny application does not train a model! Move the *computationally heavy* stuff outside of your applications!
:::

## Activity

::: {.callout-note icon="false"}
ðŸ‘‰ Activity objective: explore the simply shiny app.

-   Open the project `materials/05-shiny-app/05-shiny-app.Rproj`
-   Open the file `ferry_delay_app/app.R`
-   Supply your API URL to the Shiny App.
-   Deploy to Posit Connect!
:::

## Git-Backed Deployment

ðŸ¤” What happens when you need to make a change to the Shiny Application?

<br>

::: fragment
What if we deployed directly from the GitHub Repo?
:::

<br>

::: fragment
**Advantages:**

1.  Great for collaborative work.
2.  Connect automatically detects changes in repo and rebuilds content.
3.  ðŸ“£ All production content should be deployed using git/CI-CD!
:::

:::: fragment
::: callout-note
## Show and Tell

Let's show you how to deploy a Shiny App (our simple Ferry app) to Posit Connect using Git Backed Deployment.
:::
::::

## Shiny on Connect

Runtime settings

::::::: columns
::: {.column width="30%"}
![](slide_resources/runtime_settings.png)
:::

::::: {.column width="70%"}
:::: r-stack
![](https://media.giphy.com/media/3o6Mbsras7qdAwgABW/giphy.gif){.fragment .fade-in-then-out fig-align="center"}

![](https://media.giphy.com/media/lvlLuc2zhi39C/giphy.gif){.fragment .fade-in-then-out fig-align="center"}

::: fragment
**Min processes** --- Keep a process running on the server at all times?

**Max processes** --- Put a bound on the number of processes spawned?

**Connections per process** --- [A connection = a browser tab]{.positteal}. How many connections will share the same process? Call this **n**

**Load factor** --- Much like *min processes*, how early do you want to start a new process for that **n + 1** connection?
:::
::::
:::::
:::::::

## Posit Connect

The Shiny Restaurant Analogy

Let's say you are the **manager** of a restaurant, and you need to determine two things:

1.  How many chefs should I hire?
2.  How many customers can I accommodate at once?

::: fragment
-   Chef == [**process**]{.positgreen}
-   Customer == [**connection**]{.positgreen}
:::

## Posit Connect

The Shiny Restaurant Analogy

::::::: r-stack
::: fragment
![](slide_resources/chef-1.jpg)
:::

::: fragment
![](slide_resources/chef-2.jpg)
:::

::: fragment
![](slide_resources/chef-3.jpg)
:::

::: fragment
![](slide_resources/chef-4.jpg)
:::
:::::::

## A question for you...

What components of our workflow deployed to Posit Connect would benefit from setting `Min Processes` to > 0?

![](slide_resources/ds-workflows-r-2024.jpg){fig-align="center"}

##  {.brackets-green}

::: section-title-dark
Monitoring Content
:::

## How will I know if people are consuming my content?

::: fragment
<br>

ðŸ§° Posit Connect Server API
:::

## Posit Connect Server API endpoints

*Most endpoints require an API Key*, and [**results will be scoped to the permissions of the key**]{.positgreen}. <br>

::::: columns
::: {.column width="50%"}
**Helpful to publishers:**

-   List/Update content
-   Get content details
-   Set environment variables
-   Change permissions
-   Manage content tags
-   Manage content custom URL
-   [âœ¨ Content usage âœ¨]{.positteal}
:::

::: {.column width="50%"}
**Helpful to admins:**

-   ðŸ‘ˆ all that
-   Audit logs
-   User and group management
-   Job management
:::
:::::

<br> Full documentation: <https://docs.posit.co/connect/api/>

## Accessing the Connect Server API{.brackets-light}

-   Posit SDKs provide wrappers around `curl` and HTTP requests for easier interaction:
    -   [`{connectapi}`](https://pkgs.rstudio.com/connectapi/) R package
    -   [`{posit-sdk}`]() python package

![](https://pkgs.rstudio.com/connectapi/reference/figures/logo.svg){.absolute top="340" right="260" width="290"}

## Constructing a Content Usage Report
Incorporate into a stylized R Markdown, Quarto document or Shiny application.

::::: columns

::: {.column width="35%" .smaller}

:::{.smaller}
``` {.r .code-overflow-wrap}
...
con <- connectapi::connect()

app_usage <- get_usage_shiny(
  client,
  from = report_from,
  limit = Inf,
  content_guid = guid
)
...
```
:::
:::

::: {.column width="65%" .smaller}

:::{.smaller}

```{.r}
> usage
# A tibble: 14 Ã— 6
   content_guid      user_guid         started             ended               data_version
   <chr>             <chr>             <dttm>              <dttm>                     <int>
 1 0477855b-caeb-... 1ec56831-7a34-... 2024-03-19 21:09:03 2024-03-19 21:10:05            1
 2 0477855b-caeb-... 1ec56831-7a34-... 2024-03-19 21:39:07 2024-03-19 22:39:48            1
 3 0477855b-caeb-... d59e7a7b-9684-... 2024-03-20 00:36:29 2024-03-20 00:37:10            1
 4 0477855b-caeb-... 1ec56831-7a34-... 2024-03-20 13:50:55 2024-03-20 14:04:04            1
 5 0477855b-caeb-... 1ec56831-7a34-... 2024-03-20 16:43:56 2024-03-20 16:44:12            1
 6 0477855b-caeb-... d59e7a7b-9684-... 2024-03-21 10:52:14 2024-03-21 11:52:37            1
 7 0477855b-caeb-... fc80bd89-4488-... 2024-03-25 19:16:45 2024-03-25 19:28:19            1
 8 0477855b-caeb-... 989001e2-66df-... 2024-03-26 19:48:37 2024-03-26 21:43:10            1
 9 0477855b-caeb-... 5c7cb633-5959-... 2024-03-28 17:13:03 2024-03-28 17:19:35            1
10 0477855b-caeb-... fc80bd89-4488-... 2024-03-28 18:26:20 2024-03-28 18:34:40            1
11 0477855b-caeb-... fc80bd89-4488-... 2024-03-28 20:53:50 2024-03-28 20:54:36            1
12 0477855b-caeb-... cbee884e-f940-... 2024-03-29 16:13:44 2024-03-29 16:14:15            1
13 0477855b-caeb-... fc80bd89-4488-... 2024-03-29 18:16:10 2024-03-29 20:43:52            1
14 0477855b-caeb-... 3dc75833-f6c2-... 2024-04-11 00:36:00 2024-04-11 00:36:59            1
```
:::
:::
:::::

:::{.callout-tip title="Remember"}
Content returned from the Connect Server API will be scoped to the API key provided.
:::


## Who is Using our App?

<https://pub.ferryland.posit.team/r/usage_monitoring/>

[![](slide_resources/sample_usage_dashboard.png){fig-align="center" height="800"}](https://pub.ferryland.posit.team/r/usage_monitoring/)

## 

::: center
<h2><br>**Activity Time!**</h2>
:::

::: {.callout-note icon="false"}
## Activity

ðŸ‘‰ Activity objective: Explore the Posit SDK `{connectapi}` via the Connect Cookbook

-   Browse the [Connect Cookbook](https://docs.posit.co/connect/cookbook)
-   Open the project `materials/06-usage-monitoring/06-usage-monitoring.Rproj`
-   Open the file `06-usage-monitoring.qmd`
-   Deploy this file to Connect 
:::