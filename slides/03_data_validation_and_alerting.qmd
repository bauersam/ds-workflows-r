---
execute: 
  eval: false
---

## Data Exploration, Validation and Alerting{.title-slide-light}

![](https://github.com/rstudio/pointblank/raw/main/man/figures/logo.svg){.absolute top="200" left="50" width="260"} ![](slide_resources/quarto-icon.svg){.absolute top="200" left="310" height="300"}

## Where are we


![](slide_resources/workflow_diagram.jpg){fig-align="center"}


## Section Agenda {.brackets-light}

-   Ad-hoc data exploration
-   Ensure quality data is flowing through the pipeline
-   Conditional alerts via automation


## What is this Data?


Our first introduction to `pointblank`



:::{.fragment}

::: columns
::: {.column width="15%"}
![](https://github.com/rstudio/pointblank/raw/main/man/figures/logo.svg){style="padding-right: 15px;"}
:::

::: {.column width="75%"}
<br>`pointblank` provides data quality assessment and metadata reporting for data frames and database tables. <https://github.com/rstudio/pointblank>
:::
:::

:::

:::{.fragment}
üß∞ The `pointblank::scan_data()` function provides a HTML report of the input data to help you understand your data. 
:::

## Sample data scan

```r
pointblank::scan_data(palmerpenguins::penguins)
```
<br>


<iframe src="slide_resources/scan_penguins.html" width=100% height="650"></iframe>
 
## 

:::{.center}
<h2> <br>**Activity Time!**</h2>
:::

:::{.callout-note icon=false}
## Activity
üëâ Open the project `materials/02-data-exploration/02-data-exploration.Rproj`

Activity objective: exploring our data
 
:::


## How can I ensure the data in my pipeline is quality data?


<br>
üß∞ `pointblank` for data validation 
<br>

![](https://github.com/rstudio/pointblank/raw/main/man/figures/logo.svg){fig-align="center" height=350}



## The `pointblank` data quality workflow 


![](slide_resources/pb_flow_create_agent.png)

## The `pointblank` data quality workflow  


![](slide_resources/pb_flow_create_agent_b.png)


## The `pointblank` data quality workflow 


![](slide_resources/pb_flow_validation_plan.png)



## The `pointblank` data quality workflow  


![](slide_resources/pb_flow_interrogate.png)


## The `pointblank` data quality workflow  


![](slide_resources/pb_flow_post_interrogate.png)


## The `pointblank` data quality workflow  


![](slide_resources/pb_flow_post_interrogate_b.png)

## Data validation example

::::{.r-stack}

![](slide_resources/pb_validation_plan.png){.fragment .fade-in-then-out}

![](slide_resources/pb_validation_plan_b.png){.fragment .fade-in-then-out}

![](slide_resources/pb_validation_plan_c.png){.fragment .fade-in-then-out}

::::

## Agent Interrogation

::::{.r-stack}

![](slide_resources/pb_interrogation1.png){.fragment .fade-in-then-out}

![](slide_resources/pb_interrogation2.png){.fragment .fade-in-then-out}

![](slide_resources/pb_interrogation3.png){.fragment .fade-in-then-out}

![](slide_resources/pb_interrogation4.png){.fragment .fade-in-then-out}

![](slide_resources/pb_interrogation5a.png){.fragment .fade-in-then-out}

![](slide_resources/pb_interrogation5b.png){.fragment .fade-in-then-out}

![](slide_resources/pb_interrogation5c.png){.fragment .fade-in-then-out}

![](slide_resources/pb_interrogation6.png){.fragment .fade-in-then-out}

![](slide_resources/pb_interrogation7.png){.fragment .fade-in-then-out}

::::




## Agent Validation Report

::::{.r-stack}

![](slide_resources/pb_validation_result.png){.fragment .fade-in-then-out}

![](slide_resources/pb_validation_result_b.png){.fragment .fade-in-then-out}

![](slide_resources/pb_validation_result_c.png){.fragment .fade-in-then-out}


::::




## Pointblank data validation report

::::{.r-stack}

![](slide_resources/pb_validation_report.png){.fragment .fade-in-then-out}


![](slide_resources/pb_validation_report_b.png){.fragment .fade-in-then-out}

::::




## 

:::{.center}
<h2> <br>**Activity Time!**</h2>
:::

:::{.callout-note icon=false}
## Activity
üëâ Open to the project `materials/03-data-clean-validate/03-data-clean-validate.Rproj`

Activity objective: Use `pointblank` to validate data, remove non-compliant records, and document the data.

üõë Work through **Task 1 - Task 8** only. 

:::


## {{< bi sign-turn-right-fill color=orange >}} There's much more to `pointblank`



:::::{.fragment .fade-in-then-out .absolute top=130}

::::{.columns}

:::{.column width=40%}
- Create a `multiagent` to summarize repeated validations to monitor data quality over time.

:::

:::{.column width=50%}
![](slide_resources/multiagent.png)

:::

::::

:::::

:::::{.fragment .fade-in-then-out .absolute top=130}

::::{.columns}

:::{.column width=40%}
- Create a dynamic Data Dictionary to fully describe the data 
:::

:::{.column width=50%}
![](slide_resources/data-dictionary.png)

:::

::::

:::::

:::::{.fragment .fade-in-then-out .absolute top=130}


<h3>Try the comprehensive `pointblank` test drive on Posit Cloud: <https://posit.cloud/project/3411822></h3>

:::::


## Conditional Emails with Quarto 

Image of the conditions we want to send. 

## The Secret Sauce of Conditionality

1. yaml
1. include based on metadata

## Be aware...


‚ö†Ô∏è Common mistakes when creating emails

- There is no interactive runtime for an email
- Javascript-dependent content will generally not render when emailed -- not due to a limitation of blastula, but as result of how email clients process HTML

:::{.fragment}
üß∞ Best practices for embedding objects an email:

- ggplot2 output can be included in the blastula email output directly 
- Create nicely formatted tables with the `gt` package. (Just remember, no interactivity!)
- If you'd like to include a rendering of a widget (e.g., a dial or info box), use the `webshot2` package to take a capture of the widget and embed it as an image
- If your email recipient wants more information or interactivity, direct them to a report or dashboard deployed to Connect


:::

## {.brackets-light}





## Other Alerting Approaches {.content2-light}

{{< bi sign-turn-right-fill color=orange >}} Send alerts to a Slack channel or MS Teams, or via text message:
<https://rviews.rstudio.com/2020/06/18/how-to-have-r-notify-you/>



